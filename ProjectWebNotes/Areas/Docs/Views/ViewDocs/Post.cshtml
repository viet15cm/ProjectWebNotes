@using Entities.Models;
@using ProjectWebNotes.Areas.Docs.Views.Shared.Components.CategorySidebar;
@using ProjectWebNotes.Views.Shared.Components.BoxListCategory;
@using System.Globalization;
@model Post
@{
    var categorys = ViewData["categorys"] as IEnumerable<Category>;
    ViewData["Title"] = Model.Title;
    var url = ViewData["curenturl"] as string;

}

<div class="main-content">
    
    <div class="main-content-introduce">

        <ul class="link-curent">
            <li>
                <span><i class="bi bi-chevron-bar-right"></i></span>
                <a style="color: #0065b3" asp-area="Docs" asp-controller="ViewDocs" asp-action="index" asp-route-category="@Model.Category.Slug">@Model.Category.Title</a>
            </li>

        </ul>
        <h2 class="main-content-title">
            @Model.Title
        </h2>
        <div class="list-title-curent">
           @* <ul>
                <li>
                    <a><span class="badge bg-primary"><i class="bi bi-check"></i> Thích</span></a>
                </li>
                <li>
                    <a><span class="badge bg-primary"><i class="bi bi-share"></i> Chia Sẻ</span></a>
                </li>

            </ul>*@
                <div id="fb-root"></div>
                <script>
                    (function (d, s, id) {
                        var js, fjs = d.getElementsByTagName(s)[0];
                        if (d.getElementById(id)) return;
                        js = d.createElement(s); js.id = id;
                        js.src = "https://connect.facebook.net/en_US/sdk.js#xfbml=1&version=v3.0";
                        fjs.parentNode.insertBefore(js, fjs);
                    }(document, 'script', 'facebook-jssdk'));</script>

                <!-- Your share button code -->
                <div class="fb-share-button"
                     data-href="@url"
                     data-layout="button_count">
                </div>
        </div>

        <div class="author-date">
            <p class="author-date">Tác giả : Admin - <i class="bi bi-alarm"></i> @Model.DateCreate?.ToString("dd/MM/yyyy", CultureInfo.InvariantCulture)</p>
        </div>

    </div>

    <div class="banner-post">
      
      <img style="width: 200px; height: auto" src="@Model.Banner" />

    </div>
 
    <div class="db-post-content">

        @if (@Model?.Description != null)
        {
            <p class="db-description">@Model.Description</p>
        }

        @if (Model?.Content != null)
        {
            @Html.Raw(Model.Content)
        }

        @if (Model.Contents?.Count > 0)
        {
            <div class="rank-content-title-small">
                <p>
                    <a class="btn btn-small" data-bs-toggle="collapse" href="#content-title" role="button" aria-expanded="false" aria-controls="content-title">
                        Nội dung chính <i class="bi bi-arrows-collapse"></i>
                    </a>
                </p>
                <div class="collapse show" id="content-title">
                    <div class="card card-body">
                        <ul>
                            @{

                                await RenderTitleContents(Model.Contents);
                            }
                        </ul>


                    </div>
                </div>
            </div>
        }
        

    </div>

    <div class="db-content-main scrollspy-example" data-bs-spy="scroll" data-bs-target="#TableOfContents" data-bs-offset="0" tabindex="0">
        @if (Model.Contents?.Count > 0)
        {
            int size = 0;
            @foreach (var content in Model.Contents)
            {
                await RenderContents(content, size);
            }
        }



    </div>


</div>


<div class="rank-content scrollspy-example" data-bs-spy="scroll" data-bs-target="#TableOfContents" data-bs-offset="0" tabindex="0">
    
    <ul class="rank-content-title">
        <li>
            <strong><a href="#">Nội dung <i class="bi bi-arrow-up-short"></i> </a></strong>
        </li>
    </ul>
   
    <nav id="TableOfContents">
        <ul id="rank-content-boder">

            @if (Model.Contents?.Count > 0)
            {

                await RenderTitleContents(Model.Contents);
                
            }

        </ul>
    </nav>

  
</div>

@{
    
    async Task RenderContents(Content content, int size)
    {
        string fontsize = "";

        @if (size <= 0)
        {
            fontsize = "font-size-prarent-post";
        }
        else if (size == 1)
        {
            fontsize = "font-size-child-post-0";
        }
        else if (size == 2)
        {
            fontsize = "font-size-child-post-1";
        }
        else
        {
            fontsize = "font-size-child-post-2";
        }

        <div class="d-flex justify-content-between">
                <h1 class="@fontsize" id="@content.KeyTitleId">
                @content.Title
            </h1>
        </div>
        @if (content?.TextContents != null)
        {
            <div class="content">
                @Html.Raw(content.TextContents)
            </div>

        }
        @if (content.ContentChildrens?.Count > 0)
        {
            var listcontents = content.ContentChildrens.ToList();

            size += 1;

            foreach (var item in listcontents)
            {
                await RenderContents(item, size);
            }

        }
    }

    async Task RenderTitleContents(IEnumerable<Content> contents)
    {
        
        
        foreach (var content in contents)
        {
            <li><a href="#@content.KeyTitleId">@content.Title</a></li>

            if (content.ContentChildrens?.Count > 0)
            {
                <ul>
                @{
                        await RenderTitleContents(content.ContentChildrens);
                }
                   
                </ul>
            }
        }


    }

    
}


@section FacebookSharedHead{
    <meta property="og:url" content="@url" />
    <meta property="og:type" content="website" />
    <meta property="og:title" content="@Model.Title" />
    <meta property="og:description" content="@Model.Description" />
    <meta property="og:image" content="@Model.Banner" />
}



@section Sidebar {
    @await Component.InvokeAsync(CategorySidebar.COMPONENTNAME,
             new CategorySidebar.CategorySidebarData()
             {
                 
                 listSerialUrl = ViewBag.listSerialUrl,
                 slugPost = ViewBag.slugPost,
                 currentCategory = ViewBag.currentCategory,
                

             })

}
@section SidebarSmall {
    @await Component.InvokeAsync(CategorySidebar.COMPONENTNAME,
             new CategorySidebar.CategorySidebarData()
             {
                
                 listSerialUrl = ViewBag.listSerialUrl,
                 slugPost = ViewBag.slugPost,
                 currentCategory = ViewBag.currentCategory,
               

             })

}

@section BoxListCategory {
    @await Component.InvokeAsync(BoxListCategory.COMPONENTNAME, categorys)
}