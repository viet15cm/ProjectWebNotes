@model Category
@{
    var categorys = ViewData["categorys"] as IEnumerable<Category>;

    ViewData["Title"] = Model.Title;
   
}

<div class="main-content">

    <div class="main-content-introduce">

        <p style="text-align: right"><i class="bi bi-alarm"></i> @DateTime.Now.ToString()</p>

        <h2 class="main-content-title">
            @Model.Title
        </h2>
        <div class="db-description-category">

            @if (Model.IConFont != null)
            {
                <img src="~/ImageManager/IconCategory/@Model.IConFont" />
            }
            else
            {
                <img src="~/img/icon-default.png" />
            }
            <p>@Model.Description</p>

        </div>
        <div class="list-title-curent">
            <ul>
                <li>
                    <a><span class="badge bg-primary"><i class="bi bi-check"></i> Thích</span></a>
                </li>
                <li>
                    <a><span class="badge bg-primary"><i class="bi bi-share"></i> Chia Sẻ</span></a>
                </li>

            </ul>
        </div>


    </div>
    
    
    <div class="db-categorry-content mt-3">

        @if (Model?.Content != null)
        {
            @Html.Raw(Model.Content)
        }
    </div>

    
    @if (Model.CategoryChildren?.Count > 0)
    {
        
        <div class="db-category-introduce-box">
            @foreach (var category in Model.CategoryChildren)
            {
                <div class="category-introduce-box">
                    @if (category.IConFont != null)
                    {
                        <img src="~/ImageManager/IconCategory/@category.IConFont" />
                    }else
                    {
                        <img src="~/img/icon-default.png" />
                    }
                    <h5>
                        <a asp-controller="ViewDocs" asp-action="Index" asp-route-category="@category.Slug">@category.Title</a>
                    </h5>
                    <p>
                        @category.Description
                    </p>
                </div>
            }
        </div>
    }
  
</div>


@section Sidebar {
    @await Component.InvokeAsync(CategorySidebar.COMPONENTNAME,
             new CategorySidebar.CategorySidebarData()
             {

                 listSerialUrl = ViewBag.listSerialUrl,
                 slugPost = ViewBag.slugPost,
                 currentCategory = ViewBag.currentCategory,


             })

}
@section SidebarSmall {
    @await Component.InvokeAsync(CategorySidebar.COMPONENTNAME,
             new CategorySidebar.CategorySidebarData()
             {

                 listSerialUrl = ViewBag.listSerialUrl,
                 slugPost = ViewBag.slugPost,
                 currentCategory = ViewBag.currentCategory,


             })

}

@section BoxListCategory {
    @await Component.InvokeAsync(BoxListCategory.COMPONENTNAME, categorys)
}
