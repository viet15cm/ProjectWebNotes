@model Category
@{
    var categorys = ViewData["categorys"] as IEnumerable<Category>;
}

<div class="main-content">
    <h1 class="main-content-title">
        @Model.Title
    </h1>
    <div class="db-post-content">

        @if (@Model?.Description != null)
        {
            <p class="db-post-content-description">@Model.Description</p>
        }

        @if (Model?.Content != null)
        {
            @Html.Raw(Model.Content)
        }

    </div>


</div>


@section Sidebar {
    @await Component.InvokeAsync(CategorySidebar.COMPONENTNAME,
             new CategorySidebar.CategorySidebarData()
             {
                 slugCategory = ViewBag.slugCategory,
                 listSerialUrl = ViewBag.listSerialUrl,
                 slugPost = ViewBag.slugPost,
                 currentCategory = ViewBag.currentCategory,
                 listPostInCategory = ViewBag.listPostInCategory,

             })

}

@section SidebarSmall{
    @await Component.InvokeAsync(CategorySidebar.COMPONENTNAME,
             new CategorySidebar.CategorySidebarData()
             {
                 slugCategory = ViewBag.slugCategory,
                 listSerialUrl = ViewBag.listSerialUrl,
                 slugPost = ViewBag.slugPost,
                 currentCategory = ViewBag.currentCategory,
                 listPostInCategory = ViewBag.listPostInCategory,

             })
}

@section BoxListCategory {
    @await Component.InvokeAsync(BoxListCategory.COMPONENTNAME, categorys)
}