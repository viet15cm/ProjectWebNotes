@model ImageView

@{
    var post = ViewData["postFWDImgaesDto"] as PostsFWDImagesDto;

    var statusmessage = TempData["StatusMessage"] as string;

    ViewData["title"] = "Ảnh trong bài viết";


}

<form method="post" asp-action="EditImages" asp-route-id="@post.Id"   enctype="multipart/form-data">
    <div class="row">
        <div class="col-md-7 mb-3">
            <div class="card">
                <h6 class="card-header">Danh sánh ảnh trong bài viết <span class="text-danger">@post.Title</span> </h6>
                <div class="card-body">
                    @if (Model.AvailableImages.Count > 0)
                    {
                        @foreach (var item in Model.AvailableImages)
                        {
                            <div class="card mx-2 mb-2" style="float: left">
                                <div class="card-body" style=" height: 120px; width: 200px; border-radius: 6px;">
                                    <img src="~/ImageManager/ImagePost/@item.Value" style="height: 100%; width: auto; margin: auto; object-fit: cover; " />
                                </div>
                                <div class="card-footer checkbox">
                                    <label>
                                        <input type="checkbox"
                                               name="SelectImages"
                                               value="@item.Value"
                                               @*@if (Model.SelectImages.Contains(item.Value)) { <text> checked </text> }*@ /> @item.Text
                                        </label>

                                    </div>
                                </div>

                            }
                    }
                    else
                    {
                        <h6 class="alert alert-danger">Chưa có</h6>
                    }

                </div>
                <div class="card-footer text-danger">
                    Chọn để xóa.
                </div>

            </div>
        </div>

        <div class="col-md-5 mb-3">
            <div class="card-body d-flex flex-wrap justify-content-start mb-3 border border-1" id="container_picture">

            </div>
            <div class="mb-3">
                <input type="file" asp-for="@Model.FormFiles" id="image" multiple onchange="image_select()">
                <br />

                <span asp-validation-for="@Model.FormFiles"></span>
            </div>
            <hr />
            <button class="btn btn-primary" type="submit"><i class="fa-regular fa-pen-to-square"></i> Lưu</button>
            <a class="btn btn-primary" asp-controller="post" asp-route-id="@post.Id" asp-action="detail"><i class="fa-solid fa-arrow-rotate-left"></i> Quay về</a>
            <div asp-validation-summary="All"></div>
        </div>

    </div>

</form>



@section Scripts{

    @await Html.PartialAsync("_ValidationScriptsPartial")
        <script>
            const dts = new DataTransfer();
            var dt = null;
            debugger
            function ShowImagePreview(imgUpLoader, previewImg) {

                if (imgUpLoader.files && imgUpLoader.files[0]) {
                    dt = new DataTransfer();
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $(previewImg).attr('src', e.target.result)
                        var f = e.target.result;
                        debugger;
                    }
                    reader.readAsDataURL(imgUpLoader.files[0]);
                    debugger
                    dt.items.add(imgUpLoader.files[0]);
                    debugger
                }
                imgUpLoader.files = dt.files
            }

            var images = [];
            function image_select() {

                var image = document.getElementById('image').files;
                for (i = 0; i < image.length; i++) {
                    images.push({
                        "name": image[i].name,
                        "url": URL.createObjectURL(image[i]),
                        "file": image[i],
                    })
                }
                document.getElementById('container_picture').innerHTML = image_show();


            }

            function image_show() {
                var image = "";
                images.forEach((i) => {
                    image += `<div class="image_container d-flex justify-content-center position-relative">
                                  <img src="`+ i.url + `" alt="Image">
                                  <span class="position-absolute" onclick="delete_image(`+ images.indexOf(i) + `)">&times;</span>
                              </div>`;
                })
                return image;
            }

            function delete_image(e) {
                images.splice(e, 1);
                document.getElementById('container_picture').innerHTML = image_show();

                const dt = new DataTransfer()
                const input = document.getElementById('image')
                const { files } = input

                for (let i = 0; i < files.length; i++) {
                    const file = files[i]
                    if (e !== i)
                        dt.items.add(file);
                }

                input.files = dt.files;
                console.log(document.getElementById('image').files);
            }
        </script>
}
