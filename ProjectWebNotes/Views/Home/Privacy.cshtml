@using Domain.IdentityModel;
@using static ProjectWebNotes.Controllers.HomeController;
@model IEnumerable<Manager>

@{
    ViewData["Title"] = "Thông tin";
    Layout = "~/Views/Shared/_LayoutHome.cshtml";

    var categorys = ViewData["categorys"] as IEnumerable<Category>;

}

<div class="manager">
    @{
       await  Information(Model);
    }

</div>


@{
    async Task Information(IEnumerable<Manager> managers)
    {
        if (managers?.Count() > 0)
        {
            @foreach (var item in managers)
            {
                var role = "";
                @if (item.Roles?.Count > 0)
                {
                    role = "[" + string.Join(", ", item.Roles.Select(s => string.Format("'{0}'", s))) + "]";
                 }
                <div class="manager-container">
                    <div class="manager-img">
                        <img src="~/imagemanager/avatar/@item.UrlImage" />
                    </div>

                    <div class="manager-information">
                        <table>

                            <tr>
                                <td> @Html.LabelFor(modelItem => item.FirstName)</td>
                                <td>@Html.DisplayFor(modelItem => item.FirstName)</td>

                            </tr>
                            <tr>
                                <td>@Html.LabelFor(modelItem => item.LastName)</td>
                                <td>@Html.DisplayFor(modelItem => item.LastName)</td>

                            </tr>
                            <tr>
                                <td>@Html.LabelFor(modelItem => item.Address)</td>
                                <td>@Html.DisplayFor(modelItem => item.Address)</td>

                            </tr>
                            <tr>
                                <td>@Html.LabelFor(modelItem => item.PhoneNumber)</td>
                                <td>@Html.DisplayFor(modelItem => item.PhoneNumber)</td>

                            </tr>
                            <tr>
                                <td>@Html.LabelFor(modelItem => item.BirthDate)</td>
                                <td>@Html.DisplayFor(modelItem => item.BirthDate)</td>

                            </tr>
                         
                            <tr>
                                <td>@Html.LabelFor(modelItem => item.Email)</td>
                                <td>@Html.DisplayFor(modelItem => item.Email)</td>

                            </tr>

                            <tr>
                                <td>@Html.LabelFor(modelItem => item.NativePlace)</td>
                                <td>@Html.DisplayFor(modelItem => item.NativePlace)</td>

                            </tr>

                        </table>
                    </div>

                    <div class="manager-description">
                        <p>@Html.LabelFor(modelItem => item.RoleName) : @role <span>@Html.DisplayFor(modelItem => item.RoleName)</span></p>
                        
                        @Html.Raw(item.Describe)
                    </div>
                </div>
            }
        }
    }
}

@section BoxListCategory {

    @await Component.InvokeAsync(BoxListCategory.COMPONENTNAME, categorys)

}